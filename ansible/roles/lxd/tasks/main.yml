---

- name: Add LXD repository to sources
  become: yes
  apt_repository:
    repo: 'ppa:ubuntu-lxc/lxd-stable'

- name: Install lxd packages
  become: yes
  apt: 
    name: "{{ item }}" 
    state: present
    update_cache: yes
  with_items: 
    - "{{ lxd_packages }}"

- name: Ensure LXD service is started and enabled on boot
  become: yes
  service:
    name: "{{ lxd_service_name }}"
    state: started
    enabled: yes

- name: Add user to lxd group
  shell: newgrp lxd

- name: verify if ZFS pool exists
  become: yes
  shell: zpool list {{ lxd_zfs_pool_name }}
  register: zfspool
  ignore_errors: true

- name: print zfspool
  debug: var=zfspool

- name: create zfs file for lxd of 20GB
  become: yes
  command: "truncate -s 20G /usr/lib/lxd/zfs.img"
  when: zfspool.rc != 0

- name: create new zpool for lxd
  become: yes
  command: "zpool create {{ lxd_zfs_pool_name }} /usr/lib/lxd/zfs.img"
  when: zfspool.rc != 0

- name: verify if lxd is configured to use ZFS
  become: yes
  shell: lxc info | grep storage | grep zfs
  register: lxcinfo
  ignore_errors: true

- name: configure lxd to use zfs
  become: yes
  command: "lxd init --storage-backend zfs --storage-pool {{ lxd_zfs_pool_name }} --auto"

- name: List existing lxc images
  command: "lxc image list"
  changed_when: false
  register: imagelist

- name: Create containers
  command: lxc init ubuntu:16.04 {{ item }}
  with_items: "{{ groups.int_containers }}"

- name: Create LXD network {{ lxd_default_network_name }} if needed
  command: "lxc network create {{ lxd_default_network_name }} ipv6.address=none ipv4.address={{ lxd_ipv4_address }}/24 ipv4.nat=true"

- name: Add containers to {{ lxd_default_network_name }} network
  command: "lxc network attach {{ lxd_default_network_name }} {{ item }} eth0"
  register: output
  failed_when: "output.stderr and 'Device already exists: eth0' not in output.stderr"
  with_items: "{{ groups.int_containers }}"

- name: Set static IP in LXD containers
  command: "lxc config device set {{ item }} eth0 ipv4.address {{ hostvars[item].container_ip }}"
  with_items: "{{ groups.int_containers }}"

- name: Run all containers
  command: "lxc start {{ item }} "
  with_items: "{{ groups.int_containers }}"


- name: Create user in LXD containers for Ansible SSH
  command: "lxc exec {{ item }} -- useradd -m {{ hostvars[item].ansible_user }}"
  register: output
  failed_when: "output.stderr and 'already exists' not in output.stderr"
  with_items: "{{ groups.int_containers }}"

- name: Set user password in LXD containers for Ansible SSH
  command: "lxc exec {{ item }} -- sh -c 'echo \"{{ hostvars[item].ansible_user }}:{{ hostvars[item].ansible_become_pass }}\" | chpasswd'"
  with_items: "{{ groups.int_containers }}"

- name: Set user groups in LXD containers for Ansible SSH
  command: "lxc exec {{ item }} -- usermod -a -G lxd,sudo {{ hostvars[item].ansible_user }}"
  with_items: "{{ groups.int_containers }}"

- name: Set user shell in LXD containers for Ansible SSH
  command: "lxc exec {{ item }} -- usermod -s /bin/bash {{ hostvars[item].ansible_user }}"
  with_items: "{{ groups.int_containers }}"

- name: Allow PasswordAuthentication in LXD containers for Ansible SSH
  command: "lxc exec {{ item }} -- sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config"
  with_items: "{{ groups.int_containers }}"

- name: Restart SSH service in LXD containers for Ansible SSH
  command: "lxc exec {{ item }} -- service ssh restart"
  with_items: "{{ groups.int_containers }}"

- name: Make initial snapshot
  command: "lxc snapshot {{ item }} initial"
  with_items: "{{ groups.int_containers }}"
